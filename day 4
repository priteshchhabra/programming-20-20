import pdb
def inptSuduko():
    pdb.set_trace()
    rowFinal = []
    print("enter 0 if you don't want to fill a space in the row:")
    for i in range(0,9):
        row = []
        for j in range(0,9):
            r = int(input("enter the numbers in the elements row:"))
            row.append(r)
        rowFinal.append(row)
    return (rowFinal)
s = inptSuduko()
print(s)

def checkRow(s):
    row = []
    for i in range(len(s)):
        flag = 0
        if 0 not in s:
            x = s[i]
            del s[i]
            if x in s:
                flag = 0
                exit
            else:
                flag = 1
        else:
            x = s[i]
            del s[i]
            if x in s:
                flag = 2
                exit
            else:
                flag = 1
        return (flag)
r = checkRow(s)
if r == 0:
    print("inviable")
elif r == 1:
    print("viable")
else:
    print("viable and not complete")
        
    
        
        
    
